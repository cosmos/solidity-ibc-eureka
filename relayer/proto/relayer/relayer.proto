syntax = "proto3";

package relayer;

import "relayer/chain.proto";

// The relayer service definition
// Each relayer service is defined between two chains.
// One chain is the source chain, and the other chain is the target chain.
service RelayerService {
    // Relay the ibc packets produced by the results of transactions
    rpc RelayByTx (RelayByTxRequest) returns (stream RelayByTxResponse);
    // Request relayer information
    rpc Info (InfoRequest) returns (InfoResponse);
}

// The request message
message RelayByTxRequest {
    // The identifiers for the IBC transactions to be relayed
    // This is usually the transaction hash
    repeated bytes source_tx_ids = 1;
    // The identifiers for the IBC transactions to be timed out
    repeated bytes target_tx_ids = 2;
    // The identifier for the target channel
    // Used for event filtering
    string target_channel_id = 3;
}

// The response message
message RelayByTxResponse {
    // The status of the request
    RequestStatus status = 1;
    // The multicall transaction to be submitted by caller
    // Updated once the request is completed
    bytes tx = 2;
    // The contract address to submit the transaction, if applicable
    // Updated once the request is completed
    string address = 3;
}

// The request status
enum RequestStatus {
    // The status is unknown
    REQUEST_STATUS_UNKNOWN_UNSPECIFIED = 0;
    // The request is in progress
    REQUEST_STATUS_IN_PROGRESS = 1;
    // The request is completed
    REQUEST_STATUS_COMPLETED = 2;
}

// Information request message
message InfoRequest {}

// Information response message
message InfoResponse {
    // The target chain information
    Chain target_chain = 1;
    // The source chain information
    Chain source_chain = 2;
}
